"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(dashboard)/tarefas/page",{

/***/ "(app-pages-browser)/./src/services/tarefasService.ts":
/*!****************************************!*\
  !*** ./src/services/tarefasService.ts ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tarefasService: function() { return /* binding */ tarefasService; }\n/* harmony export */ });\n/* harmony import */ var _authService__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./authService */ \"(app-pages-browser)/./src/services/authService.ts\");\n// tarefasService.ts\n\nconst API_BASE_URL = \"http://localhost:8080\" || 0;\nasync function handleErrorResponse(response) {\n    let bodyText = \"\";\n    try {\n        bodyText = await response.text();\n    } catch (e) {\n    /* ignore */ }\n    const msg = bodyText ? \"Erro \".concat(response.status, \": \").concat(bodyText) : \"Erro \".concat(response.status, \": \").concat(response.statusText);\n    const error = new Error(msg);\n    error.status = response.status;\n    error.body = bodyText;\n    throw error;\n}\n/**\n * Valida token simples (mesma função dos outros services)\n */ function checkTokenValid(token) {\n    try {\n        const payload = JSON.parse(atob(token.split(\".\")[1]));\n        const now = Math.floor(Date.now() / 1000);\n        if (payload.exp < now) {\n            throw new Error(\"Token expirado\");\n        }\n    } catch (e) {\n        throw new Error(\"Token inv\\xe1lido ou expirado\");\n    }\n}\n/**\n * Lista de statuses aceitos pelo backend para desserializar StatusTarefa\n * (conforme erro que você colou: [POS_REUNIAO, PRE_REUNIAO])\n */ const BACKEND_ALLOWED_STATUSES = [\n    \"PRE_REUNIAO\",\n    \"POS_REUNIAO\"\n];\nfunction isValidBackendStatus(status) {\n    if (!status) return false;\n    return BACKEND_ALLOWED_STATUSES.includes(status);\n}\nconst tarefasService = {\n    async getAll () {\n        try {\n            const token = _authService__WEBPACK_IMPORTED_MODULE_0__.authService.getToken();\n            if (!token) throw new Error(\"Usu\\xe1rio n\\xe3o autenticado (token ausente).\");\n            checkTokenValid(token);\n            const res = await fetch(\"\".concat(API_BASE_URL, \"/tarefas\"), {\n                headers: {\n                    Authorization: \"Bearer \".concat(token),\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            if (!res.ok) await handleErrorResponse(res);\n            return await res.json();\n        } catch (err) {\n            console.error(\"Erro ao buscar tarefas:\", err);\n            throw new Error(\"N\\xe3o foi poss\\xedvel carregar as tarefas\");\n        }\n    },\n    async getById (id) {\n        try {\n            const token = _authService__WEBPACK_IMPORTED_MODULE_0__.authService.getToken();\n            if (!token) throw new Error(\"Usu\\xe1rio n\\xe3o autenticado (token ausente).\");\n            checkTokenValid(token);\n            const res = await fetch(\"\".concat(API_BASE_URL, \"/tarefas/\").concat(encodeURIComponent(id)), {\n                headers: {\n                    Authorization: \"Bearer \".concat(token),\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            if (!res.ok) await handleErrorResponse(res);\n            return await res.json();\n        } catch (err) {\n            console.error(\"Erro ao buscar tarefa:\", err);\n            throw new Error(\"N\\xe3o foi poss\\xedvel carregar a tarefa\");\n        }\n    },\n    async create (tarefa) {\n        try {\n            const token = _authService__WEBPACK_IMPORTED_MODULE_0__.authService.getToken();\n            if (!token) throw new Error(\"Usu\\xe1rio n\\xe3o autenticado (token ausente).\");\n            checkTokenValid(token);\n            var _tarefa_prioridade, _tarefa_responsavelId, _tarefa_reuniaoId, _tarefa_prazo;\n            const payload = {\n                descricao: tarefa.descricao,\n                prioridade: (_tarefa_prioridade = tarefa.prioridade) !== null && _tarefa_prioridade !== void 0 ? _tarefa_prioridade : null,\n                responsavelId: (_tarefa_responsavelId = tarefa.responsavelId) !== null && _tarefa_responsavelId !== void 0 ? _tarefa_responsavelId : null,\n                reuniaoId: (_tarefa_reuniaoId = tarefa.reuniaoId) !== null && _tarefa_reuniaoId !== void 0 ? _tarefa_reuniaoId : null,\n                prazo: (_tarefa_prazo = tarefa.prazo) !== null && _tarefa_prazo !== void 0 ? _tarefa_prazo : null\n            };\n            if (isValidBackendStatus(tarefa.statusTarefa)) {\n                payload.status = tarefa.statusTarefa;\n            }\n            console.log(\"Payload criar tarefa:\", JSON.stringify(payload));\n            const res = await fetch(\"\".concat(API_BASE_URL, \"/tarefas\"), {\n                method: \"POST\",\n                headers: {\n                    Authorization: \"Bearer \".concat(token),\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(payload)\n            });\n            if (!res.ok) await handleErrorResponse(res);\n            return await res.json();\n        } catch (err) {\n            console.error(\"Erro ao criar tarefa:\", err);\n            throw new Error(\"N\\xe3o foi poss\\xedvel criar a tarefa\");\n        }\n    },\n    async update (id, tarefa) {\n        try {\n            const token = _authService__WEBPACK_IMPORTED_MODULE_0__.authService.getToken();\n            if (!token) throw new Error(\"Usu\\xe1rio n\\xe3o autenticado (token ausente).\");\n            checkTokenValid(token);\n            const payload = {\n                ...tarefa.descricao !== undefined ? {\n                    descricao: tarefa.descricao\n                } : {},\n                ...tarefa.prioridade !== undefined ? {\n                    prioridade: tarefa.prioridade\n                } : {},\n                ...tarefa.responsavelId !== undefined ? {\n                    responsavelId: tarefa.responsavelId\n                } : {},\n                ...tarefa.reuniaoId !== undefined ? {\n                    reuniaoId: tarefa.reuniaoId\n                } : {},\n                ...tarefa.prazo !== undefined ? {\n                    prazo: tarefa.prazo\n                } : {}\n            };\n            if (tarefa.statusTarefa !== undefined) {\n                if (isValidBackendStatus(tarefa.statusTarefa)) {\n                    payload.status = tarefa.statusTarefa;\n                } else {\n                    console.warn('Status \"'.concat(tarefa.statusTarefa, \"\\\" n\\xe3o \\xe9 aceito pelo backend. Campo 'status' ser\\xe1 omitido do payload.\"));\n                }\n            }\n            const url = \"\".concat(API_BASE_URL, \"/tarefas/\").concat(encodeURIComponent(id));\n            // DEBUG: mostra URL e payload\n            console.log(\"UPDATE URL:\", url);\n            console.log(\"Payload atualizar tarefa:\", JSON.stringify(payload));\n            // Tenta PUT primeiro (com o URL padrão)\n            let res = await fetch(url, {\n                method: \"PUT\",\n                headers: {\n                    Authorization: \"Bearer \".concat(token),\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(payload)\n            });\n            // Se 404, vamos diagnosticar/fazer fallback:\n            if (res.status === 404) {\n                console.warn(\"PUT \".concat(url, \" retornou 404. Tentando diagnosticar...\"));\n                // 1) Verifica se a tarefa existe com GET\n                const getRes = await fetch(url, {\n                    headers: {\n                        Authorization: \"Bearer \".concat(token),\n                        \"Content-Type\": \"application/json\"\n                    }\n                });\n                if (getRes.status === 404) {\n                    // recurso realmente não existe\n                    const bodyText = await getRes.text().catch(()=>\"\");\n                    throw new Error(\"Tarefa n\\xe3o encontrada (404). Resposta GET: \".concat(bodyText));\n                }\n                if (!getRes.ok) {\n                    // GET retornou outro erro\n                    const bodyText = await getRes.text().catch(()=>\"\");\n                    throw new Error(\"Erro ao verificar exist\\xeancia da tarefa: \".concat(getRes.status, \" - \").concat(bodyText));\n                }\n                // 2) Recurso existe (GET ok) — tenta PATCH (fallback)\n                console.warn(\"GET /tarefas/{id} retornou OK, mas PUT deu 404. Tentando PATCH como fallback...\");\n                res = await fetch(url, {\n                    method: \"PATCH\",\n                    headers: {\n                        Authorization: \"Bearer \".concat(token),\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(payload)\n                });\n                if (res.status === 404) {\n                    const bodyText = await res.text().catch(()=>\"\");\n                    throw new Error(\"PUT e PATCH retornaram 404. Resposta PATCH: \".concat(bodyText));\n                }\n            }\n            if (!res.ok) {\n                await handleErrorResponse(res);\n            }\n            return await res.json();\n        } catch (err) {\n            console.error(\"Erro ao atualizar tarefa:\", err);\n            throw new Error(\"N\\xe3o foi poss\\xedvel atualizar a tarefa\");\n        }\n    },\n    async delete (id) {\n        try {\n            const token = _authService__WEBPACK_IMPORTED_MODULE_0__.authService.getToken();\n            if (!token) throw new Error(\"Usu\\xe1rio n\\xe3o autenticado (token ausente).\");\n            checkTokenValid(token);\n            const res = await fetch(\"\".concat(API_BASE_URL, \"/tarefas/\").concat(encodeURIComponent(id)), {\n                method: \"DELETE\",\n                headers: {\n                    Authorization: \"Bearer \".concat(token),\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            if (!res.ok) await handleErrorResponse(res);\n        } catch (err) {\n            console.error(\"Erro ao deletar tarefa:\", err);\n            throw new Error(\"N\\xe3o foi poss\\xedvel deletar a tarefa\");\n        }\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/tarefasService.ts\n"));

/***/ })

});